{"version":3,"sources":["usePicsum.js","App.js","serviceWorker.js","index.js","../node_modules/webapp-library/apis sync /^/.//.*$"],"names":["buildRequestUrl","data","size","width","height","id","grayscale","blur","requestUrl","getPhoto","a","lastRequestUrl","fetch","response","blob","imageBlob","url","split","URL","createObjectURL","usePicsum","useState","window","innerWidth","innerHeight","setSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","setData","then","d","App","console","log","photoInfo","setPhotoInfo","startApis","process","setCallback","pi","undefined","displayGrayscale","displayBlur","stopApis","src","alt","onClick","photoClicked","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.f43a6c77.chunk.js","sourcesContent":["\nimport { useState, useEffect } from 'react';\n\nconst buildRequestUrl = (data) => {\n  const {\n    size: { width, height }, id, grayscale, blur,\n  } = data;\n  let requestUrl = (id)\n    ? `https://picsum.photos/id/${id}/${width}/${height}/`\n    : `https://picsum.photos/${width}/${height}/`;\n  if (grayscale) requestUrl = `${requestUrl}?grayscale`;\n  if (blur) requestUrl = (grayscale) ? `${requestUrl}&blur` : `${requestUrl}?blur`;\n  return requestUrl;\n};\n\nconst getPhoto = async (data) => {\n  const { lastRequestUrl } = data;\n  const requestUrl = buildRequestUrl(data);\n  if (requestUrl === lastRequestUrl) return data; // no changes\n  const response = await fetch(requestUrl);\n  const imageBlob = await response.blob();\n  const id = response.url.split('/')[4];\n  return {\n    ...data,\n    lastRequestUrl: buildRequestUrl({ ...data, id }),\n    id,\n    url: URL.createObjectURL(imageBlob),\n  };\n};\n\nfunction useWindowSize() {\n  const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    const handleResize = () => setSize({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  return size;\n}\n\nconst usePicsum = () => {\n  const size = useWindowSize();\n  const [data, setData] = useState({});\n  const { id, grayscale, blur } = data;\n\n  useEffect(() => {\n    getPhoto({ ...data, size }).then(d => setData(d));\n  }, [size, id, grayscale, blur]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return [data, setData];\n};\n\nexport default usePicsum;\n","import React, { useEffect } from 'react';\nimport { startApis, stopApis } from 'webapp-library';\nimport { setCallback } from 'webapp-library/LibType2';\nimport { photoClicked } from 'webapp-library/LibType2/Api2';\nimport './App.css';\nimport usePicsum from './usePicsum';\n\nconst parentOrigin = process.env.REACT_APP_PARENT_ORIGIN;\n\nconst App = () => {\n  console.log('render webapp2');\n  const [photoInfo, setPhotoInfo] = usePicsum();\n  const { url, id } = photoInfo;\n\n  useEffect(() => {\n    startApis(parentOrigin);\n    setCallback('displayNewPhoto', () => setPhotoInfo(pi => (\n      { ...pi, id: undefined }\n    )));\n    setCallback('displayGrayscale', displayGrayscale => setPhotoInfo(pi => (\n      { ...pi, grayscale: displayGrayscale }\n    )));\n    setCallback('displayBlur', displayBlur => setPhotoInfo(pi => (\n      { ...pi, blur: displayBlur }\n    )));\n    return stopApis;\n  }, [setPhotoInfo]);\n\n  if (!url) return null;\n  return <img src={url} alt=\"\" onClick={() => photoClicked(id)} />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./Api1\": 23,\n\t\"./Api1/\": 23,\n\t\"./Api1/callbacks\": 41,\n\t\"./Api1/callbacks.js\": 41,\n\t\"./Api1/index\": 23,\n\t\"./Api1/index.js\": 23,\n\t\"./Api2\": 24,\n\t\"./Api2/\": 24,\n\t\"./Api2/apis\": 25,\n\t\"./Api2/apis.js\": 25,\n\t\"./Api2/callbacks\": 26,\n\t\"./Api2/callbacks.js\": 26,\n\t\"./Api2/index\": 24,\n\t\"./Api2/index.js\": 24,\n\t\"./Api3\": 27,\n\t\"./Api3/\": 27,\n\t\"./Api3/apis\": 28,\n\t\"./Api3/apis.js\": 28,\n\t\"./Api3/index\": 27,\n\t\"./Api3/index.js\": 27,\n\t\"./Common\": 29,\n\t\"./Common/\": 29,\n\t\"./Common/callbacks\": 30,\n\t\"./Common/callbacks.js\": 30,\n\t\"./Common/index\": 29,\n\t\"./Common/index.js\": 29,\n\t\"./registerCallback\": 16,\n\t\"./registerCallback.js\": 16,\n\t\"./send\": 11,\n\t\"./send.js\": 11\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 95;"],"sourceRoot":""}